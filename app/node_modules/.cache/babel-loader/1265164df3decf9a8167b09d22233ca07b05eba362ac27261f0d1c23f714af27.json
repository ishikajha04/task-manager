{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ishika Jha\\\\task-manager-app\\\\app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios'; // Import Axios for HTTP requests\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]); // State for tasks\n  const [newTask, setNewTask] = useState({\n    title: '',\n    description: '',\n    dueDate: '',\n    status: 'pending'\n  });\n\n  // Fetch tasks from backend when the component mounts\n  useEffect(() => {\n    axios.get('http://localhost:5000/tasks') // Fetch tasks from backend\n    .then(response => {\n      setTasks(response.data); // Update state with fetched tasks\n    }).catch(error => {\n      console.error('Error fetching tasks:', error); // Log any error\n    });\n  }, []); // Empty array ensures this runs once after the component mounts\n\n  // Handle form submission to add a new task\n  const handleSubmit = e => {\n    e.preventDefault(); // Prevent default form submission\n    axios.post('http://localhost:5000/tasks', newTask) // Send new task data to backend\n    .then(response => {\n      setTasks([...tasks, response.data]); // Add new task to task list\n      setNewTask({\n        title: '',\n        description: '',\n        dueDate: '',\n        status: 'pending'\n      }); // Clear form\n    }).catch(error => {\n      console.error('Error creating task:', error); // Log any error\n    });\n  };\n  const handleUpdateTask = (id, updatedData) => {\n    axios.put(`http://localhost:5000/tasks/${id}`, updatedData).then(response => {\n      // Update the task in state with the updated task data\n      setTasks(tasks.map(task => task.id === id ? response.data : task));\n    }).catch(error => {\n      console.error('Error updating task:', error);\n    });\n  };\n  const handleDeleteTask = id => {\n    axios.delete(`http://localhost:5000/tasks/${id}`).then(() => {\n      // Remove the deleted task from the state\n      setTasks(tasks.filter(task => task.id !== id));\n    }).catch(error => {\n      console.error('Error deleting task:', error);\n    });\n  };\n  const filterTasksByStatus = status => {\n    return tasks.filter(task => task.status === status);\n  };\n  const filterTasksByDueDate = dueDate => {\n    return tasks.filter(task => new Date(task.dueDate).toLocaleDateString() === new Date(dueDate).toLocaleDateString());\n  };\n  const subscribeToPushNotifications = async () => {\n    const registration = await navigator.serviceWorker.ready;\n    const subscription = await registration.pushManager.subscribe({\n      userVisibleOnly: true,\n      applicationServerKey: urlB64ToUint8Array('<Your Public VAPID Key>') // You need to replace this with your VAPID public key\n    });\n    console.log('Push subscription:', subscription);\n\n    // Send the subscription details to the backend to store for later push notification sending\n    axios.post('http://localhost:5000/subscribe', subscription).then(response => {\n      console.log('Subscription sent to backend');\n    }).catch(error => {\n      console.error('Error subscribing to push notifications:', error);\n    });\n  };\n  function urlB64ToUint8Array(base64String) {\n    const padding = '='.repeat((4 - base64String.length % 4) % 4);\n    const base64 = (base64String + padding).replace(/\\-/g, '+').replace(/_/g, '/');\n    const rawData = window.atob(base64);\n    const outputArray = new Uint8Array(rawData.length);\n    for (let i = 0; i < rawData.length; ++i) {\n      outputArray[i] = rawData.charCodeAt(i);\n    }\n    return outputArray;\n  }\n  const requestNotificationPermission = async () => {\n    if ('Notification' in window && navigator.serviceWorker) {\n      const permission = await Notification.requestPermission();\n      if (permission === 'granted') {\n        console.log('Notification permission granted');\n        // After permission is granted, you can proceed with subscribing to push notifications\n        subscribeToPushNotifications();\n      } else {\n        console.error('Notification permission denied');\n      }\n    }\n  };\n  const getAIInsights = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.post('http://localhost:5000/ai-insights', {\n        taskList: tasks\n      });\n      setAiInsights(response.data.insights); // Store the AI insights\n    } catch (error) {\n      console.error('Error getting AI insights:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    requestNotificationPermission();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Task Title\",\n        value: newTask.title,\n        onChange: e => setNewTask({\n          ...newTask,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Task Description\",\n        value: newTask.description,\n        onChange: e => setNewTask({\n          ...newTask,\n          description: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: newTask.dueDate,\n        onChange: e => setNewTask({\n          ...newTask,\n          dueDate: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          textDecoration: task.status === 'completed' ? 'line-through' : 'none'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), \" - \", task.status, \" (Due: \", task.dueDate, \")\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUpdateTask(task.id, {\n            status: 'completed'\n          }),\n          children: \"Mark as Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteTask(task.id),\n          children: \"Delete Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Due Today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filterTasksByDueDate(new Date()).map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [task.title, \" - \", task.status]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Completed Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filterTasksByStatus('completed').map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [task.title, \" - \", task.dueDate]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Overdue Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filterTasksByDueDate(new Date()).map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [task.title, \" - \", task.dueDate]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"V+ufQAOHgacaK9KVzYCkGLV2GjM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","newTask","setNewTask","title","description","dueDate","status","get","then","response","data","catch","error","console","handleSubmit","e","preventDefault","post","handleUpdateTask","id","updatedData","put","map","task","handleDeleteTask","delete","filter","filterTasksByStatus","filterTasksByDueDate","Date","toLocaleDateString","subscribeToPushNotifications","registration","navigator","serviceWorker","ready","subscription","pushManager","subscribe","userVisibleOnly","applicationServerKey","urlB64ToUint8Array","log","base64String","padding","repeat","length","base64","replace","rawData","window","atob","outputArray","Uint8Array","i","charCodeAt","requestNotificationPermission","permission","Notification","requestPermission","getAIInsights","setLoading","taskList","setAiInsights","insights","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","style","textDecoration","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Ishika Jha/task-manager-app/app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios'; // Import Axios for HTTP requests\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]);  // State for tasks\n  const [newTask, setNewTask] = useState({\n    title: '',\n    description: '',\n    dueDate: '',\n    status: 'pending',\n  });\n\n  // Fetch tasks from backend when the component mounts\n  useEffect(() => {\n    axios\n      .get('http://localhost:5000/tasks')  // Fetch tasks from backend\n      .then((response) => {\n        setTasks(response.data);  // Update state with fetched tasks\n      })\n      .catch((error) => {\n        console.error('Error fetching tasks:', error);  // Log any error\n      });\n  }, []);  // Empty array ensures this runs once after the component mounts\n\n  // Handle form submission to add a new task\n  const handleSubmit = (e) => {\n    e.preventDefault(); // Prevent default form submission\n    axios\n      .post('http://localhost:5000/tasks', newTask)  // Send new task data to backend\n      .then((response) => {\n        setTasks([...tasks, response.data]);  // Add new task to task list\n        setNewTask({ title: '', description: '', dueDate: '', status: 'pending' });  // Clear form\n      })\n      .catch((error) => {\n        console.error('Error creating task:', error);  // Log any error\n      });\n  };\n  const handleUpdateTask = (id, updatedData) => {\n    axios\n        .put(`http://localhost:5000/tasks/${id}`, updatedData)\n        .then((response) => {\n            // Update the task in state with the updated task data\n            setTasks(tasks.map(task => task.id === id ? response.data : task));\n        })\n        .catch((error) => {\n            console.error('Error updating task:', error);\n        });\n};\n\nconst handleDeleteTask = (id) => {\n  axios\n      .delete(`http://localhost:5000/tasks/${id}`)\n      .then(() => {\n          // Remove the deleted task from the state\n          setTasks(tasks.filter(task => task.id !== id));\n      })\n      .catch((error) => {\n          console.error('Error deleting task:', error);\n      });\n};\nconst filterTasksByStatus = (status) => {\n  return tasks.filter(task => task.status === status);\n};\n\nconst filterTasksByDueDate = (dueDate) => {\n  return tasks.filter(task => new Date(task.dueDate).toLocaleDateString() === new Date(dueDate).toLocaleDateString());\n};\n\nconst subscribeToPushNotifications = async () => {\n  const registration = await navigator.serviceWorker.ready;\n\n  const subscription = await registration.pushManager.subscribe({\n      userVisibleOnly: true,\n      applicationServerKey: urlB64ToUint8Array('<Your Public VAPID Key>') // You need to replace this with your VAPID public key\n  });\n\n  console.log('Push subscription:', subscription);\n\n  // Send the subscription details to the backend to store for later push notification sending\n  axios.post('http://localhost:5000/subscribe', subscription)\n      .then((response) => {\n          console.log('Subscription sent to backend');\n      })\n      .catch((error) => {\n          console.error('Error subscribing to push notifications:', error);\n      });\n};\n\nfunction urlB64ToUint8Array(base64String) {\n  const padding = '='.repeat((4 - base64String.length % 4) % 4);\n  const base64 = (base64String + padding)\n      .replace(/\\-/g, '+')\n      .replace(/_/g, '/');\n\n  const rawData = window.atob(base64);\n  const outputArray = new Uint8Array(rawData.length);\n\n  for (let i = 0; i < rawData.length; ++i) {\n      outputArray[i] = rawData.charCodeAt(i);\n  }\n\n  return outputArray;\n}\n\n\nconst requestNotificationPermission = async () => {\n  if ('Notification' in window && navigator.serviceWorker) {\n      const permission = await Notification.requestPermission();\n      \n      if (permission === 'granted') {\n          console.log('Notification permission granted');\n          // After permission is granted, you can proceed with subscribing to push notifications\n          subscribeToPushNotifications();\n      } else {\n          console.error('Notification permission denied');\n      }\n  }\n};\n\nconst getAIInsights = async () => {\n  setLoading(true);\n\n  try {\n      const response = await axios.post('http://localhost:5000/ai-insights', {\n          taskList: tasks\n      });\n      setAiInsights(response.data.insights);  // Store the AI insights\n  } catch (error) {\n      console.error('Error getting AI insights:', error);\n  } finally {\n      setLoading(false);\n  }\n};\n\n\nuseEffect(() => {\n  requestNotificationPermission();\n}, []);\n\n\n\n  return (\n    <div>\n      <h1>Task Dashboard</h1>\n\n      {/* Task creation form */}\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Task Title\"\n          value={newTask.title}\n          onChange={(e) => setNewTask({ ...newTask, title: e.target.value })}\n        />\n        <textarea\n          placeholder=\"Task Description\"\n          value={newTask.description}\n          onChange={(e) => setNewTask({ ...newTask, description: e.target.value })}\n        />\n        <input\n          type=\"date\"\n          value={newTask.dueDate}\n          onChange={(e) => setNewTask({ ...newTask, dueDate: e.target.value })}\n        />\n        <button type=\"submit\">Add Task</button>\n      </form>\n\n      <ul>\n    {tasks.map((task) => (\n        <li key={task.id} style={{ textDecoration: task.status === 'completed' ? 'line-through' : 'none' }}>\n            <strong>{task.title}</strong> - {task.status} (Due: {task.dueDate})\n            <button onClick={() => handleUpdateTask(task.id, { status: 'completed' })}>\n                Mark as Completed\n            </button>\n            <button onClick={() => handleDeleteTask(task.id)}>\n                Delete Task\n            </button>\n        </li>\n    ))}\n</ul>\n\n\n\n\n<div>\n    <h2>Due Today</h2>\n    <ul>\n        {filterTasksByDueDate(new Date()).map(task => (\n            <li key={task.id}>{task.title} - {task.status}</li>\n        ))}\n    </ul>\n\n    <h2>Completed Tasks</h2>\n    <ul>\n        {filterTasksByStatus('completed').map(task => (\n            <li key={task.id}>{task.title} - {task.dueDate}</li>\n        ))}\n    </ul>\n\n    <h2>Overdue Tasks</h2>\n    <ul>\n        {filterTasksByDueDate(new Date()).map(task => (\n            <li key={task.id}>{task.title} - {task.dueDate}</li>\n        ))}\n    </ul>\n</div>\n\n\n\n\n\n\n    </div>\n    \n  );\n};\n\nexport default App;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}